<style type="scss">
.tabbar {
  position: fixed;
  left: 0;
  bottom: 0;
  height: 100rpx;
  width: 100%;
  box-shadow: 0 0 10rpx rgba(45,48,54,.5);
  font-size: 20rpx;
  white-space: nowrap;
  z-index: 999;
  &_wrapper {
    position: relative;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    background-color: #FFFFFF;
    z-index: 2;
  }
  &_circle {
    position: absolute;
    width: 108rpx;
    height: 108rpx;
    border-radius: 50%;
    box-shadow: 0 0 10rpx rgba(45,48,54,.5);
    left: 50%;
    margin-left: -54rpx;
    top: -40rpx;
    background-color: #FFFFFF;
    z-index: 1;
  }
  &_item {
    color: #A4A4A4;
    &.active {
      color: #EB3034;
    }
    display: block;
    flex: 1;
    width: 100%;
    text-align: center;
    &_icon {
      font-family: 'car_iconfonts';
      font-size: 40rpx;
      line-height: 50rpx;
      &_trips {
        &:before {
          content: '\e909';
        }
      }
      &_trip {
        &:before {
          content: '\e900';
        }
      }
      &_me {
        &:before {
          content: '\e90b';
        }
      }
    }
    &_title {
      display: block;
    }
  }
  &_trip {
    display: flex;
    flex-direction: column;
    align-items: center;
    &_icon {
      width: 88rpx;
      height: 88rpx;
      background: #EB3434;
      border-radius: 50%;
      margin-top: -40rpx;
      margin-bottom: 4rpx;
      position: relative;
      &:before, &:after {
        content: '';
        display: block;
        position: absolute;
        left: 50%;
        top: 50%;
        background-color: #FFFFFF;
        border-radius: 4rpx;
      }
      &:before {
        width: 4rpx;
        height: 40rpx;
        margin-left: -2rpx;
        margin-top: -20rpx;
      }
      &:after {
        width: 40rpx;
        height: 4rpx;
        margin-left: -20rpx;
        margin-top: -2rpx;
      }
      &.roll {
        animation: roll .5s ease-in-out forwards;
      }
    }
  }
}
@keyframes roll {
  0% { transform: rotate(0deg) }
  100% { transform: rotate(359deg) }
}
</style>

<template>
  <view class="tabbar">
    <view class="tabbar_wrapper">
      <view class="tabbar_item tabbar_schedule{{active === 0 ? ' active' : ''}}" @tap="goToList">
        <view class="tabbar_item_icon tabbar_item_icon_trips"></view>
        <text class="tabbar_item_title">行程</text>
      </view>
      <view class="tabbar_item tabbar_trip tabbar_add{{active === 1 ? ' active' : ''}}" @tap="goToPublish">
        <view class="tabbar_trip_icon{{isTripRoll ? ' roll' : ''}}"></view>
        <text class="tabbar_item_title">发布</text>
      </view>
      <view class="tabbar_item tabbar_me{{active === 2 ? ' active' : ''}}" @tap="goToMine">
        <view class="tabbar_item_icon tabbar_item_icon_me"></view>
        <text class="tabbar_item_title">我</text>
      </view>
    </view>
    <view class="tabbar_circle"></view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'

  import { initMessage } from '../actions/message'
  import { setTripInfo } from '../actions/trip'

  @connect({
    user (state) {
      return state.user
    }
  }, {
    initMessage,
    setTripInfo
  })
  export default class TabBar extends wepy.component {
    props = {
      active: {
        twoWay: true
      }
    }

    data = {
      isTripRoll: false
    }

    methods = {
      async goToList () {
        if (this.user.status !== 0) {
          await wepy.showToast({
            icon: 'none',
            title: '您的账号尚未审核通过'
          })
          return
        }
        this.isTripRoll = false
        this.active = 0
        this.$emit('switchTab', 0)
      },

      async goToPublish () {
        if (this.user.status !== 0) {
          await wepy.showToast({
            icon: 'none',
            title: '您的账号尚未审核通过'
          })
          return
        }
        this.isTripRoll = true
        this.active = 1
        this.methods.initMessage()
        this.methods.setTripInfo({
          type: 'new',
          from: 'add'
        })
        this.$emit('switchTab', 1)
      },

      goToMine () {
        this.isTripRoll = false
        this.active = 2
        this.$emit('switchTab', 2)
      }
    }
  }
</script>
